<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Util.Security</name>
    </assembly>
    <members>
        <member name="T:Util.Security.Claims.ClaimTypes">
            <summary>
            声明类型
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.Email">
            <summary>
            电子邮件
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.Mobile">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.FullName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.ApplicationId">
            <summary>
            应用程序标识
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.ApplicationCode">
            <summary>
            应用程序编码
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.ApplicationName">
            <summary>
            应用程序名称
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.TenantId">
            <summary>
            租户标识
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.TenantCode">
            <summary>
            租户编码
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.TenantName">
            <summary>
            租户名称
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.RoleIds">
            <summary>
            角色标识列表
            </summary>
        </member>
        <member name="P:Util.Security.Claims.ClaimTypes.RoleName">
            <summary>
            角色名
            </summary>
        </member>
        <member name="T:Util.Security.Extensions">
            <summary>
            用户会话扩展
            </summary>
        </member>
        <member name="M:Util.Security.Extensions.GetUserId(Util.Sessions.ISession)">
            <summary>
            获取当前操作人标识
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetUserId``1(Util.Sessions.ISession)">
            <summary>
            获取当前操作人标识
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetUserName(Util.Sessions.ISession)">
            <summary>
            获取当前操作人用户名
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetFullName(Util.Sessions.ISession)">
            <summary>
            获取当前操作人姓名
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetEmail(Util.Sessions.ISession)">
            <summary>
            获取当前操作人电子邮件
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetMobile(Util.Sessions.ISession)">
            <summary>
            获取当前操作人手机号
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetApplicationId(Util.Sessions.ISession)">
            <summary>
            获取当前应用程序标识
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetApplicationId``1(Util.Sessions.ISession)">
            <summary>
            获取当前应用程序标识
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetApplicationCode(Util.Sessions.ISession)">
            <summary>
            获取当前应用程序编码
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetApplicationName(Util.Sessions.ISession)">
            <summary>
            获取当前应用程序名称
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetTenantId(Util.Sessions.ISession)">
            <summary>
            获取当前租户标识
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetTenantId``1(Util.Sessions.ISession)">
            <summary>
            获取当前租户标识
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetTenantCode(Util.Sessions.ISession)">
            <summary>
            获取当前租户编码
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetTenantName(Util.Sessions.ISession)">
            <summary>
            获取当前租户名称
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetRoleIds(Util.Sessions.ISession)">
            <summary>
            获取当前操作人角色标识列表
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetRoleIds``1(Util.Sessions.ISession)">
            <summary>
            获取当前操作人角色标识列表
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="M:Util.Security.Extensions.GetRoleName(Util.Sessions.ISession)">
            <summary>
            获取当前操作人角色名
            </summary>
            <param name="session">用户会话</param>
        </member>
        <member name="T:Util.Security.Identity.Describers.IdentityErrorChineseDescriber">
            <summary>
            Identity中文错误描述
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.PasswordTooShort(System.Int32)">
            <summary>
            密码太短
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.PasswordRequiresNonAlphanumeric">
            <summary>
            密码应包含非字母和数字的特殊字符
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.PasswordRequiresUpper">
            <summary>
            密码应包含大写字母
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.PasswordRequiresDigit">
            <summary>
            密码应包含数字
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.PasswordRequiresUniqueChars(System.Int32)">
            <summary>
            密码应包含不重复的字符数
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.InvalidUserName(System.String)">
            <summary>
            无效用户名
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.DuplicateUserName(System.String)">
            <summary>
            用户名重复
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.DuplicateEmail(System.String)">
            <summary>
            电子邮件重复
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.InvalidToken">
            <summary>
            无效令牌
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.PasswordMismatch">
            <summary>
            密码错误
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.InvalidRoleName(System.String)">
            <summary>
            角色名无效
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Describers.IdentityErrorChineseDescriber.DuplicateRoleName(System.String)">
            <summary>
            角色名重复
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Extensions.Extensions">
            <summary>
            Identity配置扩展
            </summary>
            <summary>
            Identity结果扩展
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.Load(Microsoft.AspNetCore.Identity.IdentityOptions,Util.Security.Identity.Options.PermissionOptions)">
            <summary>
            加载权限配置
            </summary>
            <param name="options">Identity配置</param>
            <param name="permissionOptions">权限配置</param>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.LoadPassword(Microsoft.AspNetCore.Identity.IdentityOptions,Util.Security.Identity.Options.PermissionOptions)">
            <summary>
            加载密码配置
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.LoadUser(Microsoft.AspNetCore.Identity.IdentityOptions,Util.Security.Identity.Options.PermissionOptions)">
            <summary>
            加载用户配置
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.LoadStore(Microsoft.AspNetCore.Identity.IdentityOptions,Util.Security.Identity.Options.PermissionOptions)">
            <summary>
            加载存储配置
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.LoadSignIn(Microsoft.AspNetCore.Identity.IdentityOptions,Util.Security.Identity.Options.PermissionOptions)">
            <summary>
            加载登录配置
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.LoadLockout(Microsoft.AspNetCore.Identity.IdentityOptions,Util.Security.Identity.Options.PermissionOptions)">
            <summary>
            加载登录锁定配置
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Extensions.Extensions.ThrowIfError(Microsoft.AspNetCore.Identity.IdentityResult)">
            <summary>
            失败抛出异常
            </summary>
            <param name="result">Identity结果</param>
        </member>
        <member name="T:Util.Security.Identity.Models.Application`2">
            <summary>
            应用程序
            </summary>
            <typeparam name="TApplication">应用程序类型</typeparam>
            <typeparam name="TKey">应用程序标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Models.Application`2.#ctor(`1)">
            <summary>
            初始化应用程序
            </summary>
            <param name="id">应用程序标识</param>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.Code">
            <summary>
            应用程序编码
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.Name">
            <summary>
            应用程序名称
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.Comment">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.RegisterEnabled">
            <summary>
            启用注册
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.CreatorId">
            <summary>
            创建人编号
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.LastModificationTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.LastModifierId">
            <summary>
            最后修改人编号
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Application`2.IsDeleted">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Application`2.AddDescriptions">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Application`2.AddChanges(`0)">
            <summary>
            添加变更列表
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Models.Role`3">
            <summary>
            角色
            </summary>
            <typeparam name="TRole">角色类型</typeparam>
            <typeparam name="TKey">角色标识类型</typeparam>
            <typeparam name="TParentId">角色父标识类型</typeparam>
            <summary>
            角色
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Role`3.#ctor(`1,System.String,System.Int32)">
            <summary>
            初始化角色
            </summary>
            <param name="id">角色标识</param>
            <param name="path">路径</param>
            <param name="level">级数</param>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.Code">
            <summary>
            角色编码
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.Name">
            <summary>
            角色名称
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.NormalizedName">
            <summary>
            标准化角色名称
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.Type">
            <summary>
            角色类型
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.IsAdmin">
            <summary>
            管理员
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.Comment">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.PinYin">
            <summary>
            拼音简码
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.Sign">
            <summary>
            签名
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.CreatorId">
            <summary>
            创建人编号
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.LastModificationTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.LastModifierId">
            <summary>
            最后修改人编号
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.Role`3.IsDeleted">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Role`3.AddDescriptions">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Role`3.AddChanges(`0)">
            <summary>
            添加变更列表
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Role`3.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.Role`3.InitPinYin">
            <summary>
            初始化拼音简码
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Models.User`2">
            <summary>
            用户
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
            <summary>
            用户
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.#ctor(`1)">
            <summary>
            初始化用户
            </summary>
            <param name="id">用户标识</param>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.NormalizedUserName">
            <summary>
            标准化用户名
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.Email">
            <summary>
            安全邮箱
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.NormalizedEmail">
            <summary>
            标准化邮箱
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.EmailConfirmed">
            <summary>
            邮箱已确认
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.PhoneNumber">
            <summary>
            安全手机
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.PhoneNumberConfirmed">
            <summary>
            手机已确认
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.PasswordHash">
            <summary>
            密码散列
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.SafePassword">
            <summary>
            安全码
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.SafePasswordHash">
            <summary>
            安全码散列
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LockoutEnabled">
            <summary>
            启用锁定
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LockoutEnd">
            <summary>
            锁定截止
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LastLoginTime">
            <summary>
            上次登陆时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LastLoginIp">
            <summary>
            上次登陆Ip
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.CurrentLoginTime">
            <summary>
            本次登陆时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.CurrentLoginIp">
            <summary>
            本次登陆Ip
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LoginCount">
            <summary>
            登陆次数
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.AccessFailedCount">
            <summary>
            登陆失败次数
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.TwoFactorEnabled">
            <summary>
            启用两阶段认证
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.Enabled">
            <summary>
            启用
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.DisabledTime">
            <summary>
            冻结时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.RegisterIp">
            <summary>
            注册Ip
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.SecurityStamp">
            <summary>
            安全戳
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.Comment">
            <summary>
            备注
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.CreatorId">
            <summary>
            创建人
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LastModificationTime">
            <summary>
            最后修改时间
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.LastModifierId">
            <summary>
            最后修改人
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.IsDeleted">
            <summary>
            是否删除
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.AddDescriptions">
            <summary>
            添加描述
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.AddChanges(`0)">
            <summary>
            添加变更列表
            </summary>
        </member>
        <member name="F:Util.Security.Identity.Models.User`2._claims">
            <summary>
            声明列表
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Models.User`2.Encryptor">
            <summary>
            加密器
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.Init">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.InitUserName">
            <summary>
            初始化用户名
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.Validate">
            <summary>
            验证
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.SetPassword(System.Nullable{System.Boolean},System.String)">
            <summary>
            设置密码
            </summary>
            <param name="storeOriginalPassword">是否存储原始密码</param>
            <param name="password">密码</param>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.GetEncryptor">
            <summary>
            获取加密器
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.SetSafePassword(System.Nullable{System.Boolean},System.String)">
            <summary>
            设置安全码
            </summary>
            <param name="storeOriginalPassword">是否存储原始密码</param>
            <param name="password">安全码</param>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.GetPassword">
            <summary>
            获取密码
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.GetSafePassword">
            <summary>
            获取安全码
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.GetClaims">
            <summary>
            获取声明列表
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.AddClaim(System.Security.Claims.Claim)">
            <summary>
            获取声明列表
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.AddClaim(System.String,System.String)">
            <summary>
            添加声明
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Models.User`2.AddUserClaims">
            <summary>
            添加用户声明
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Options.LockoutOptions">
            <summary>
            登录锁定配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.LockoutOptions.AllowedForNewUsers">
            <summary>
            是否锁定新创建的用户，默认锁定
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.LockoutOptions.MaxFailedAccessAttempts">
            <summary>
            导致锁定的登录失败最大次数，默认5次
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.LockoutOptions.LockoutTimeSpan">
            <summary>
            锁定时间间隔，默认5分钟
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Options.PasswordOptions">
            <summary>
            密码配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PasswordOptions.MinLength">
            <summary>
            密码最小长度，默认值为 1
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PasswordOptions.UniqueChars">
            <summary>
            密码应包含不重复的字符数，默认值为 1
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PasswordOptions.NonAlphanumeric">
            <summary>
            密码应包含非字母和数字的特殊字符，比如 #，默认不启用
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PasswordOptions.Uppercase">
            <summary>
            密码应包含大写字母，默认不启用
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PasswordOptions.Digit">
            <summary>
            密码应包含数字，默认不启用
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Options.PermissionOptions">
            <summary>
            权限配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PermissionOptions.Password">
            <summary>
            密码配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PermissionOptions.User">
            <summary>
            用户配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PermissionOptions.Store">
            <summary>
            存储配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PermissionOptions.SignIn">
            <summary>
            登录配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.PermissionOptions.Lockout">
            <summary>
            登录锁定配置
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Options.SignInOptions">
            <summary>
            登录配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.SignInOptions.ConfirmedEmail">
            <summary>
            必须确认电子邮件才能登录
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.SignInOptions.ConfirmedPhoneNumber">
            <summary>
            必须确认手机号才能登录
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Options.StoreOptions">
            <summary>
            存储配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.StoreOptions.MaxLengthForKeys">
            <summary>
            键最大长度
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.StoreOptions.ProtectPersonalData">
            <summary>
            加密存储标记为[ProtectedPersonalData]的用户数据，默认不启用
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.StoreOptions.StoreOriginalPassword">
            <summary>
            存储原始密码，默认不启用
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Options.UserOptions">
            <summary>
            用户配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.UserOptions.UserNameCharacters">
            <summary>
            用户名允许使用的字符. 默认值为 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-._@+
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Options.UserOptions.UniqueEmail">
            <summary>
            用户的电子邮件必须唯一，默认不启用
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Repositories.IApplicationRepository`2">
            <summary>
            应用程序仓储
            </summary>
            <typeparam name="TApplication">应用程序类型</typeparam>
            <typeparam name="TKey">应用程序标识类型</typeparam>
        </member>
        <member name="T:Util.Security.Identity.Repositories.IRoleRepository`3">
            <summary>
            角色仓储
            </summary>
            <typeparam name="TRole">角色类型</typeparam>
            <typeparam name="TKey">角色标识类型</typeparam>
            <typeparam name="TParentId">角色父标识类型</typeparam>
        </member>
        <member name="T:Util.Security.Identity.Repositories.IUserRepository`2">
            <summary>
            用户仓储
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
        </member>
        <member name="T:Util.Security.Identity.Results.SignInResult">
            <summary>
            登录结果
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Results.SignInResult.#ctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Results.SignInResult.#ctor(Util.Security.Identity.Results.SignInState,System.String)">
            <summary>
            初始化
            </summary>
            <param name="state">登录状态</param>
            <param name="userId">用户标识</param>
        </member>
        <member name="P:Util.Security.Identity.Results.SignInResult.State">
            <summary>
            登录状态
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Results.SignInResult.UserId">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Results.SignInState">
            <summary>
            登录状态
            </summary>
        </member>
        <member name="F:Util.Security.Identity.Results.SignInState.Succeeded">
            <summary>
            登录成功
            </summary>
        </member>
        <member name="F:Util.Security.Identity.Results.SignInState.Failed">
            <summary>
            失败
            </summary>
        </member>
        <member name="F:Util.Security.Identity.Results.SignInState.TwoFactor">
            <summary>
            需要两阶段认证
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Services.Abstractions.IRoleManager`3">
            <summary>
            角色服务
            </summary>
            <typeparam name="TRole">角色类型</typeparam>
            <typeparam name="TKey">角色标识类型</typeparam>
            <typeparam name="TParentId">角色父标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IRoleManager`3.CreateAsync(`0)">
            <summary>
            创建角色
            </summary>
            <param name="role">角色</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IRoleManager`3.UpdateAsync(`0)">
            <summary>
            修改角色
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Services.Abstractions.ISignInManager`2">
            <summary>
            登录服务
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.ISignInManager`2.SignInAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            登录
            </summary>
            <param name="account">帐号，可以是用户名，手机号或电子邮件</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.ISignInManager`2.SignInByUserNameAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            用户名登录
            </summary>
            <param name="userName">用户</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.ISignInManager`2.SignInByEmailAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            电子邮件登录
            </summary>
            <param name="email">电子邮件</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.ISignInManager`2.SignInByPhoneAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            手机号登录
            </summary>
            <param name="phoneNumber">手机号</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.ISignInManager`2.SignOutAsync">
            <summary>
            退出登录
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Services.Abstractions.IUserManager`2">
            <summary>
            用户服务
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.CreateAsync(`0,System.String)">
            <summary>
            创建用户
            </summary>
            <param name="user">用户</param>
            <param name="password">密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.GenerateTokenAsync(System.String,System.String,System.String,System.String)">
            <summary>
            生成令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="purpose">用途</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.GenerateTokenAsync(`0,System.String,System.String,System.String)">
            <summary>
            生成令牌
            </summary>
            <param name="user">用户</param>
            <param name="purpose">用途</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.VerifyTokenAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            验证令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="purpose">用途</param>
            <param name="token">令牌</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.VerifyTokenAsync(`0,System.String,System.String,System.String,System.String)">
            <summary>
            验证令牌
            </summary>
            <param name="user">手机号</param>
            <param name="purpose">用途</param>
            <param name="token">令牌</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.GenerateRegisterTokenAsync(System.String,System.String)">
            <summary>
            生成手机号注册令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="application">应用程序</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.VerifyRegisterTokenAsync(System.String,System.String,System.String)">
            <summary>
            验证手机号注册令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="token">令牌</param>
            <param name="application">应用程序</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.GenerateEmailConfirmationTokenAsync(`0)">
            <summary>
            生成电子邮件确认令牌
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.ConfirmEmailAsync(`0,System.String)">
            <summary>
            激活电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="token">令牌</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.GenerateEmailPasswordResetTokenAsync(`0)">
            <summary>
            生成电子邮件重置密码令牌
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.ResetPasswordByEmailAsync(`0,System.String,System.String)">
            <summary>
            通过电子邮件重置密码
            </summary>
            <param name="user">用户</param>
            <param name="token">令牌</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.GeneratePhonePasswordResetTokenAsync(`0)">
            <summary>
            生成手机号重置密码令牌
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.ResetPasswordByPhoneAsync(`0,System.String,System.String)">
            <summary>
            通过手机号重置密码
            </summary>
            <param name="user">用户</param>
            <param name="token">令牌</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.ChangePasswordAsync(`0,System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="user">用户</param>
            <param name="currentPassword">当前密码</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.FindByNameAsync(System.String)">
            <summary>
            通过用户名查找
            </summary>
            <param name="userName">用户名</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.FindByEmailAsync(System.String)">
            <summary>
            通过电子邮件查找
            </summary>
            <param name="email">电子邮件</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Abstractions.IUserManager`2.FindByPhoneAsync(System.String)">
            <summary>
            通过手机号查找
            </summary>
            <param name="phoneNumber">手机号</param>
        </member>
        <member name="T:Util.Security.Identity.Services.Configs.TokenPurpose">
            <summary>
            令牌用途
            </summary>
        </member>
        <member name="F:Util.Security.Identity.Services.Configs.TokenPurpose.PhoneRegister">
            <summary>
            手机号注册
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Services.Implements.IdentitySignInManager`2">
            <summary>
            Identity登录服务
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.IdentitySignInManager`2.#ctor(Microsoft.AspNetCore.Identity.UserManager{`0},Microsoft.AspNetCore.Http.IHttpContextAccessor,Microsoft.AspNetCore.Identity.IUserClaimsPrincipalFactory{`0},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.SignInManager{`0}},Microsoft.AspNetCore.Authentication.IAuthenticationSchemeProvider)">
            <summary>
            初始化Identity登录服务
            </summary>
            <param name="userManager">Identity用户服务</param>
            <param name="contextAccessor">HttpContext访问器</param>
            <param name="claimsFactory">用户声明工厂</param>
            <param name="optionsAccessor">Identity配置</param>
            <param name="logger">日志</param>
            <param name="schemes">认证架构提供程序</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.IdentitySignInManager`2.CanSignInAsync(`0)">
            <summary>
            是否允许登录
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.IdentitySignInManager`2.CreateUserPrincipalAsync(`0)">
            <summary>
            创建用户安全主体
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="T:Util.Security.Identity.Services.Implements.IdentityUserManager`2">
            <summary>
            Identity用户服务
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.IdentityUserManager`2.#ctor(Microsoft.AspNetCore.Identity.IUserStore{`0},Microsoft.Extensions.Options.IOptions{Microsoft.AspNetCore.Identity.IdentityOptions},Microsoft.AspNetCore.Identity.IPasswordHasher{`0},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IUserValidator{`0}},System.Collections.Generic.IEnumerable{Microsoft.AspNetCore.Identity.IPasswordValidator{`0}},Microsoft.AspNetCore.Identity.ILookupNormalizer,Microsoft.AspNetCore.Identity.IdentityErrorDescriber,System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Identity.UserManager{`0}})">
            <summary>
            初始化Identity用户服务
            </summary>
            <param name="store">用户存储</param>
            <param name="optionsAccessor">配置</param>
            <param name="passwordHasher">密码加密器</param>
            <param name="userValidators">用户验证器</param>
            <param name="passwordValidators">密码验证器</param>
            <param name="keyNormalizer">键标准化器</param>
            <param name="errors">错误描述</param>
            <param name="services">服务提供程序</param>
            <param name="logger">日志</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.IdentityUserManager`2.ResetPasswordAsync(`0,System.String,System.String,System.String)">
            <summary>
            重置密码
            </summary>
            <param name="user">用户</param>
            <param name="tokenProvidor">令牌提供程序</param>
            <param name="token">令牌</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="T:Util.Security.Identity.Services.Implements.RoleManager`3">
            <summary>
            角色服务
            </summary>
            <typeparam name="TRole">角色类型</typeparam>
            <typeparam name="TKey">角色标识类型</typeparam>
            <typeparam name="TParentId">角色父标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.RoleManager`3.#ctor(Microsoft.AspNetCore.Identity.RoleManager{`0},Util.Security.Identity.Repositories.IRoleRepository{`0,`1,`2})">
            <summary>
            初始化角色服务
            </summary>
            <param name="roleManager">Identity角色服务</param>
            <param name="repository">角色仓储</param>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.RoleManager`3.Manager">
            <summary>
            Identity角色服务
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.RoleManager`3.Repository">
            <summary>
            角色仓储
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.RoleManager`3.CreateAsync(`0)">
            <summary>
            创建角色
            </summary>
            <param name="role">角色</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.RoleManager`3.ValidateCreate(`0)">
            <summary>
            创建角色验证
            </summary>
            <param name="role">角色</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.RoleManager`3.ThrowDuplicateCodeException(System.String)">
            <summary>
            抛出编码重复异常
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.RoleManager`3.UpdateAsync(`0)">
            <summary>
            修改角色
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.RoleManager`3.ValidateUpdate(`0)">
            <summary>
            修改角色验证
            </summary>
            <param name="role">角色</param>
        </member>
        <member name="T:Util.Security.Identity.Services.Implements.SignInManager`2">
            <summary>
            登录服务
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.#ctor(Util.Security.Identity.Services.Implements.IdentitySignInManager{`0,`1},Util.Security.Identity.Services.Abstractions.IUserManager{`0,`1})">
            <summary>
            初始化登录服务
            </summary>
            <param name="signInManager">Identity登录服务</param>
            <param name="userManager">用户服务</param>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.SignInManager`2.IdentitySignInManager">
            <summary>
            Identity登录服务
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.SignInManager`2.UserManager">
            <summary>
            用户服务
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.SignInAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            登录
            </summary>
            <param name="account">帐号，可以是用户名，手机号或电子邮件</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.GetUser(System.String)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.PasswordSignIn(`0,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            密码登录
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.AddClaimsToUser(`0,System.String)">
            <summary>
            添加声明到用户
            </summary>
            <param name="user">用户</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.SignInByUserNameAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            用户名密码登录
            </summary>
            <param name="userName">用户</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.SignInByEmailAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            电子邮件密码登录
            </summary>
            <param name="email">电子邮件</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.SignInByPhoneAsync(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            手机号密码登录
            </summary>
            <param name="phoneNumber">手机号</param>
            <param name="password">密码</param>
            <param name="isPersistent">cookie是否持久保留,设置为false,当关闭浏览器则cookie失效</param>
            <param name="lockoutOnFailure">达到登录失败次数是否锁定</param>
            <param name="applicationCode">应用程序编码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.SignInManager`2.SignOutAsync">
            <summary>
            退出登录
            </summary>
        </member>
        <member name="T:Util.Security.Identity.Services.Implements.UserManager`2">
            <summary>
            用户服务
            </summary>
            <typeparam name="TUser">用户类型</typeparam>
            <typeparam name="TKey">用户标识类型</typeparam>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.#ctor(Util.Security.Identity.Services.Implements.IdentityUserManager{`0,`1},Microsoft.Extensions.Options.IOptions{Util.Security.Identity.Options.PermissionOptions},Util.Security.Identity.Repositories.IUserRepository{`0,`1})">
            <summary>
            初始化用户服务
            </summary>
            <param name="userManager">Identity用户服务</param>
            <param name="options">权限配置</param>
            <param name="userRepository">用户仓储</param>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.UserManager`2.Manager">
            <summary>
            Identity用户服务
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.UserManager`2.Options">
            <summary>
            权限配置
            </summary>
        </member>
        <member name="P:Util.Security.Identity.Services.Implements.UserManager`2.UserRepository">
            <summary>
            用户仓储
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.CreateAsync(`0,System.String)">
            <summary>
            创建用户
            </summary>
            <param name="user">用户</param>
            <param name="password">密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GenerateTokenAsync(System.String,System.String,System.String,System.String)">
            <summary>
            生成令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="purpose">用途</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GetUserOrDefault(System.String)">
            <summary>
            获取用户
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.CreateSecurityStamp">
            <summary>
            创建安全戳
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GenerateTokenAsync(`0,System.String,System.String,System.String)">
            <summary>
            生成令牌
            </summary>
            <param name="user">用户</param>
            <param name="purpose">用途</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GetPurpose(System.String,System.String)">
            <summary>
            获取用途
            </summary>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.VerifyTokenAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            验证令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="purpose">用途</param>
            <param name="token">令牌</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.VerifyTokenAsync(`0,System.String,System.String,System.String,System.String)">
            <summary>
            验证令牌
            </summary>
            <param name="user">手机号</param>
            <param name="purpose">用途</param>
            <param name="token">令牌</param>
            <param name="application">应用程序</param>
            <param name="provider">令牌提供器</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GenerateRegisterTokenAsync(System.String,System.String)">
            <summary>
            生成手机号注册令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="application">应用程序</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.VerifyRegisterTokenAsync(System.String,System.String,System.String)">
            <summary>
            验证手机号注册令牌
            </summary>
            <param name="phone">手机号</param>
            <param name="token">令牌</param>
            <param name="application">应用程序</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GenerateEmailConfirmationTokenAsync(`0)">
            <summary>
            生成电子邮件确认令牌
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.ConfirmEmailAsync(`0,System.String)">
            <summary>
            激活电子邮件
            </summary>
            <param name="user">用户</param>
            <param name="token">令牌</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GenerateEmailPasswordResetTokenAsync(`0)">
            <summary>
            生成电子邮件重置密码令牌
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.ResetPasswordByEmailAsync(`0,System.String,System.String)">
            <summary>
            通过电子邮件重置密码
            </summary>
            <param name="user">用户</param>
            <param name="token">令牌</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.GeneratePhonePasswordResetTokenAsync(`0)">
            <summary>
            生成手机号重置密码令牌
            </summary>
            <param name="user">用户</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.ResetPasswordByPhoneAsync(`0,System.String,System.String)">
            <summary>
            通过手机号重置密码
            </summary>
            <param name="user">用户</param>
            <param name="token">令牌</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.ChangePasswordAsync(`0,System.String,System.String)">
            <summary>
            修改密码
            </summary>
            <param name="user">用户</param>
            <param name="currentPassword">当前密码</param>
            <param name="newPassword">新密码</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.FindByNameAsync(System.String)">
            <summary>
            通过用户名查找
            </summary>
            <param name="userName">用户名</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.FindByEmailAsync(System.String)">
            <summary>
            通过电子邮件查找
            </summary>
            <param name="email">电子邮件</param>
        </member>
        <member name="M:Util.Security.Identity.Services.Implements.UserManager`2.FindByPhoneAsync(System.String)">
            <summary>
            通过手机号查找
            </summary>
            <param name="phoneNumber">手机号</param>
        </member>
        <member name="T:Util.Security.Properties.SecurityResource">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.DuplicateApplicationCode">
            <summary>
              查找类似 应用程序编码 {0} 已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.DuplicateApplicationName">
            <summary>
              查找类似 应用程序名称 {0} 已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.DuplicateEmail">
            <summary>
              查找类似 电子邮件 {0} 已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.DuplicateRoleCode">
            <summary>
              查找类似 角色编码 {0} 已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.DuplicateRoleName">
            <summary>
              查找类似 角色名 {0} 已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.DuplicateUserName">
            <summary>
              查找类似 用户名 {0} 已存在 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidAccountOrPassword">
            <summary>
              查找类似 帐号无效或密码不正确 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidEmailOrPassword">
            <summary>
              查找类似 电子邮件无效或密码不正确 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidPhoneOrPassword">
            <summary>
              查找类似 手机号无效或密码不正确 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidRoleName">
            <summary>
              查找类似 用户名 {0} 无效 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidToken">
            <summary>
              查找类似 无效的令牌 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidUserName">
            <summary>
              查找类似 用户名 {0} 无效，仅允许字母或数字 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.InvalidUserNameOrPassword">
            <summary>
              查找类似 用户名无效或密码不正确 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.LoginFailLock">
            <summary>
              查找类似 由于您多次登录失败，暂时被系统锁定，请稍后再试 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.PasswordMismatch">
            <summary>
              查找类似 密码错误 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.PasswordRequiresDigit">
            <summary>
              查找类似 密码应包含数字 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.PasswordRequiresNonAlphanumeric">
            <summary>
              查找类似 密码应包含非字母和数字的特殊字符，比如 # 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.PasswordRequiresUniqueChars">
            <summary>
              查找类似 密码应包含至少 {0} 个不重复的字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.PasswordRequiresUpper">
            <summary>
              查找类似 密码应包含大写字母 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.PasswordTooShort">
            <summary>
              查找类似 密码不能少于 {0} 个字符 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.UserIsDisabled">
            <summary>
              查找类似 您的帐户已被冻结，请联系管理员 的本地化字符串。
            </summary>
        </member>
        <member name="P:Util.Security.Properties.SecurityResource.UserNameIsEmpty">
            <summary>
              查找类似 用户名不能为空 的本地化字符串。
            </summary>
        </member>
        <member name="T:Util.Security.Sessions.Session">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="F:Util.Security.Sessions.Session.Null">
            <summary>
            空用户会话
            </summary>
        </member>
        <member name="F:Util.Security.Sessions.Session.Instance">
            <summary>
            用户会话
            </summary>
        </member>
        <member name="P:Util.Security.Sessions.Session.IsAuthenticated">
            <summary>
            是否认证
            </summary>
        </member>
        <member name="P:Util.Security.Sessions.Session.UserId">
            <summary>
            用户标识
            </summary>
        </member>
        <member name="T:Util.Security.Sessions.SessionMiddlewareBase">
            <summary>
            用户会话中间件
            </summary>
        </member>
        <member name="F:Util.Security.Sessions.SessionMiddlewareBase._next">
            <summary>
            方法
            </summary>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            初始化用户会话中间件
            </summary>
            <param name="next">方法</param>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            执行方法
            </summary>
            <param name="context">Http上下文</param>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.Authenticate(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            认证
            </summary>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.AuthenticateBefore(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            认证前操作
            </summary>
            <param name="context">Http上下文</param>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.IsAuthenticated(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            是否认证
            </summary>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.LoadClaims(Microsoft.AspNetCore.Http.HttpContext,System.Security.Claims.ClaimsIdentity)">
            <summary>
            加载声明列表
            </summary>
            <param name="context">Http上下文</param>
            <param name="identity">身份标识</param>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.AuthenticateAfter(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            认证后操作
            </summary>
            <param name="context">Http上下文</param>
        </member>
        <member name="M:Util.Security.Sessions.SessionMiddlewareBase.GetService``1(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            获取服务
            </summary>
            <param name="context">Http上下文</param>
            <typeparam name="T">服务类型</typeparam>
        </member>
    </members>
</doc>
